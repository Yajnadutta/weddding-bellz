{"ast":null,"code":"var _jsxFileName = \"D:\\\\Wedding_planner_website\\\\Wedding-Website\\\\integration-app\\\\src\\\\Products.js\";\nimport React, { useState, useRef } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from \"sweetalert\";\nimport \"./App.css\";\nimport * as actions from \"./actions/actions\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Nav from \"react-bootstrap/Nav\";\nconst PHOTOS_VIDEO = \"Photo & Video\";\nconst BRIDAL = \"Bridal Wear\";\nconst MAKEUP = \"Makeup\";\nconst DESTINATION = \"Destination\";\nconst GROOM = \"Groom Wear\";\n\nconst responseGoogle = response => {\n  console.log(response);\n};\n\nfunction Products({\n  setCart,\n  cart,\n  category,\n  customer,\n  products,\n  setproducts\n}) {\n  const [name, setname] = useState(\"\");\n  const [imageURL, setimageURL] = useState(\"\");\n  const [cost, setcost] = useState(\"\");\n\n  const addToCart = product => {\n    if (customer === \"\") {\n      alert(\"Please Log In first\");\n    } else {\n      let newCart = [...cart];\n      let itemInCart = newCart.find(item => product.name === item.name);\n\n      if (itemInCart) {\n        itemInCart.quantity++;\n      } else {\n        itemInCart = { ...product,\n          quantity: 1\n        };\n        newCart.push(itemInCart);\n      }\n\n      setCart(newCart);\n      swal({\n        title: \"Package Added\",\n        icon: \"success\"\n      });\n    }\n  };\n\n  const deletefromdb = product => {\n    if (customer === \"\") {\n      alert(\"Please Log In first\");\n    } else {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"DELETE\", \"http://localhost:8080/deleteproduct\"); // send the request\n\n      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      let obj = {\n        _id: product._id\n      };\n      setproducts(products.filter(item => item._id !== product._id));\n      xhr.send(JSON.stringify(obj));\n      swal({\n        title: \"Product Deleted\",\n        icon: \"success\"\n      });\n    }\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const getProductsInCategory = () => {\n    return products.filter(product => product.category === category);\n  };\n\n  const save = () => {\n    if (validate()) {\n      var xhr = new XMLHttpRequest(); // get a callback when the server responds\n      // xhr.addEventListener('load', () => {\n      //   // update the state of the component with the result here\n      //   console.log(xhr.responseText)\n      // })\n      // open the request with the verb and the url\n\n      xhr.open(\"POST\", \"http://localhost:8080/insertproduct\"); // send the request\n\n      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      let obj = {\n        category: category,\n        name: name,\n        cost: cost,\n        image: imageURL\n      };\n      let newproducts = [...products];\n      newproducts.push(obj);\n      setproducts(newproducts);\n      xhr.send(JSON.stringify(obj));\n      handleClose();\n    }\n  };\n\n  const validate = () => {\n    let isValid = true;\n\n    if (!name) {\n      alert(\"Invalid Name\");\n      return false;\n    }\n\n    if (!cost) {\n      alert(\"Invalid cost\");\n      return false;\n    }\n\n    if (!imageURL) {\n      alert(\"Invalid Image URL\");\n      return false;\n    }\n\n    return isValid;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    className: \"btn btn-danger float-right mt-0 btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Insert Product\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, getProductsInCategory().map((product, idx) => /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: \"25rem\",\n      marginTop: 20,\n      marginLeft: 30\n    },\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: product.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"\\u20B9\", product.cost), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-lg\",\n    onClick: () => addToCart(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Add to Package\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger float-right mt-0 btn-lg\",\n    onClick: () => deletefromdb(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Delete\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    size: \"lg\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"Add Product\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"col-sm-2 col-form-label\",\n    style: {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"inputEmail\",\n    placeholder: \"Enter Name\",\n    value: name,\n    onInput: e => setname(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputEmail\",\n    class: \"col-sm-2 col-form-label\",\n    style: {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, \"Cost\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"inputEmail\",\n    placeholder: \"Enter Cost\",\n    value: cost,\n    onInput: e => setcost(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputEmail\",\n    class: \"col-sm-2 col-form-label\",\n    style: {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, \"Image URL\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"inputEmail\",\n    placeholder: \"Enter Image URL\",\n    value: imageURL,\n    onInput: e => setimageURL(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n}\n\nconst receive = state => {\n  if (state.hasOwnProperty(\"status\")) {\n    if (state.status.update === \"success\") {\n      state.data.forEach((element, index) => {\n        if (element.p_id == state.status.record.p_id) {\n          element.p_name = state.status.record.p_name;\n          element.p_cost = state.status.record.p_cost;\n        }\n      });\n    }\n\n    if (state.status.delete === \"success\") {\n      let id = state.data.findIndex((element, index) => {\n        return element.p_id === state.status.p_id;\n      });\n      state.data.splice(id, 1);\n    }\n\n    if (state.status.insert === \"success\") {\n      state.data.push(state.status.record);\n      swal({\n        title: \"Insert Success\",\n        icon: \"success\"\n      });\n    }\n  }\n\n  return {\n    data: state.data,\n    status: state.status\n  };\n};\n\nconst send = dispatch => {\n  return {\n    getProducts: () => {\n      dispatch(actions.getProducts());\n    },\n    addNewProduct: record => {\n      dispatch(actions.addNewProduct(record));\n    }\n  };\n};\n\nexport default connect(receive, send)(Products);","map":{"version":3,"sources":["D:/Wedding_planner_website/Wedding-Website/integration-app/src/Products.js"],"names":["React","useState","useRef","Card","connect","Button","swal","actions","Container","Table","Form","Modal","Nav","PHOTOS_VIDEO","BRIDAL","MAKEUP","DESTINATION","GROOM","responseGoogle","response","console","log","Products","setCart","cart","category","customer","products","setproducts","name","setname","imageURL","setimageURL","cost","setcost","addToCart","product","alert","newCart","itemInCart","find","item","quantity","push","title","icon","deletefromdb","xhr","XMLHttpRequest","open","setRequestHeader","obj","_id","filter","send","JSON","stringify","show","setShow","handleClose","handleShow","getProductsInCategory","save","validate","image","newproducts","isValid","map","idx","width","marginTop","marginLeft","fontSize","fontWeight","e","target","value","receive","state","hasOwnProperty","status","update","data","forEach","element","index","p_id","record","p_name","p_cost","delete","id","findIndex","splice","insert","dispatch","getProducts","addNewProduct"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from \"sweetalert\";\nimport \"./App.css\";\nimport * as actions from \"./actions/actions\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Nav from \"react-bootstrap/Nav\";\nconst PHOTOS_VIDEO = \"Photo & Video\";\nconst BRIDAL = \"Bridal Wear\";\nconst MAKEUP = \"Makeup\";\nconst DESTINATION = \"Destination\";\nconst GROOM = \"Groom Wear\";\nconst responseGoogle = (response) => {\n  console.log(response);\n};\nfunction Products({\n  setCart,\n  cart,\n  category,\n  customer,\n  products,\n  setproducts,\n}) {\n  const [name, setname] = useState(\"\");\n  const [imageURL, setimageURL] = useState(\"\");\n  const [cost, setcost] = useState(\"\");\n\n  const addToCart = (product) => {\n    if (customer === \"\") {\n      alert(\"Please Log In first\");\n    } else {\n      let newCart = [...cart];\n      let itemInCart = newCart.find((item) => product.name === item.name);\n      if (itemInCart) {\n        itemInCart.quantity++;\n      } else {\n        itemInCart = {\n          ...product,\n          quantity: 1,\n        };\n        newCart.push(itemInCart);\n      }\n      setCart(newCart);\n      swal({\n        title: \"Package Added\",\n        icon: \"success\",\n      });\n    }\n  };\n\n  const deletefromdb = (product) => {\n    if (customer === \"\") {\n      alert(\"Please Log In first\");\n    } else {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"DELETE\", \"http://localhost:8080/deleteproduct\");\n      // send the request\n      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      let obj = {\n        _id: product._id,\n      };\n      setproducts(products.filter((item) => item._id !== product._id));\n      xhr.send(JSON.stringify(obj));\n      swal({\n        title: \"Product Deleted\",\n        icon: \"success\",\n      });\n    }\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const getProductsInCategory = () => {\n    return products.filter((product) => product.category === category);\n  };\n\n  const save = () => {\n    if (validate()) {\n      var xhr = new XMLHttpRequest();\n      // get a callback when the server responds\n      // xhr.addEventListener('load', () => {\n      //   // update the state of the component with the result here\n      //   console.log(xhr.responseText)\n      // })\n      // open the request with the verb and the url\n      xhr.open(\"POST\", \"http://localhost:8080/insertproduct\");\n      // send the request\n      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n      let obj = {\n        category: category,\n        name: name,\n        cost: cost,\n        image: imageURL,\n      };\n\n      let newproducts = [...products];\n\n      newproducts.push(obj);\n      setproducts(newproducts);\n      xhr.send(JSON.stringify(obj));\n\n      handleClose();\n    }\n  };\n\n  const validate = () => {\n    let isValid = true;\n\n    if (!name) {\n      alert(\"Invalid Name\");\n      return false;\n    }\n\n    if (!cost) {\n      alert(\"Invalid cost\");\n      return false;\n    }\n\n    if (!imageURL) {\n      alert(\"Invalid Image URL\");\n      return false;\n    }\n    return isValid;\n  };\n\n  return (\n    <>\n      {/* <div id=\"select\">\n        <select onChange={(e) => setCategory(e.target.value)}>\n          <option value={PHOTOS_VIDEO}>{PHOTOS_VIDEO}</option>\n          <option value={BRIDAL}>{BRIDAL}</option>\n          <option value={MAKEUP}>{MAKEUP}</option>\n          <option value={DESTINATION}>{DESTINATION}</option>\n          <option value={GROOM}>{GROOM}</option>\n        </select>\n      </div> */}\n      <div>\n        {/* <button\n          className=\"btn btn-danger float-right mt-0 btn-lg\"\n          onClick={showPopup}\n        >\n          Insert Product\n        </button> */}\n        <Button\n          variant=\"primary\"\n          onClick={handleShow}\n          className=\"btn btn-danger float-right mt-0 btn-lg\"\n        >\n          Insert Product\n        </Button>\n\n        <div className=\"products\">\n          {getProductsInCategory().map((product, idx) => (\n            <Card\n              style={{ width: \"25rem\", marginTop: 20, marginLeft: 30 }}\n              key={idx}\n            >\n              <Card.Img variant=\"top\" src={product.image} />\n              <Card.Body>\n                <Card.Title>{product.name}</Card.Title>\n\n                <h4>₹{product.cost}</h4>\n                <button\n                  className=\"btn btn-success btn-lg\"\n                  onClick={() => addToCart(product)}\n                >\n                  Add to Package\n                </button>\n                <button\n                  className=\"btn btn-danger float-right mt-0 btn-lg\"\n                  onClick={() => deletefromdb(product)}\n                >\n                  Delete\n                </button>\n              </Card.Body>\n            </Card>\n          ))}\n\n          <div></div>\n        </div>\n\n        {/* <Modal show={status} onHide={closePopup} size=\"lg\" centered>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <h1>Add Product</h1>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <div class=\"form-group row\">\n                <label\n                  class=\"col-sm-2 col-form-label\"\n                  style={{ fontSize: 15, fontWeight: \"bold\" }}\n                >\n                  Name\n                </label>\n                <div class=\"col-sm-10\">\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail\"\n                    placeholder=\"Enter Name\"\n                    ref=\"name\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group row\">\n                <label\n                  for=\"inputEmail\"\n                  class=\"col-sm-2 col-form-label\"\n                  style={{ fontSize: 15, fontWeight: \"bold\" }}\n                >\n                  Cost\n                </label>\n                <div class=\"col-sm-10\">\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail\"\n                    placeholder=\"Enter City\"\n                    ref=\"cost\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group row\">\n                <label\n                  for=\"inputEmail\"\n                  class=\"col-sm-2 col-form-label\"\n                  style={{ fontSize: 15, fontWeight: \"bold\" }}\n                >\n                  Image URL\n                </label>\n                <div class=\"col-sm-10\">\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail\"\n                    placeholder=\"Enter Partner Name\"\n                    ref=\"imageURL\"\n                    required\n                  />\n                </div>\n              </div>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"success\"\n              className=\"btm btn-block\"\n              onClick={() => {\n                save();\n              }}\n            >\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal> */}\n\n        <Modal show={show} onHide={handleClose} size=\"lg\" centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Product</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <div class=\"form-group row\">\n                <label\n                  class=\"col-sm-2 col-form-label\"\n                  style={{ fontSize: 15, fontWeight: \"bold\" }}\n                >\n                  Name\n                </label>\n                <div class=\"col-sm-10\">\n                  <input\n                    type=\"email\"\n                    id=\"inputEmail\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onInput={(e) => setname(e.target.value)}\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group row\">\n                <label\n                  for=\"inputEmail\"\n                  class=\"col-sm-2 col-form-label\"\n                  style={{ fontSize: 15, fontWeight: \"bold\" }}\n                >\n                  Cost\n                </label>\n                <div class=\"col-sm-10\">\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail\"\n                    placeholder=\"Enter Cost\"\n                    value={cost}\n                    onInput={(e) => setcost(e.target.value)}\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group row\">\n                <label\n                  for=\"inputEmail\"\n                  class=\"col-sm-2 col-form-label\"\n                  style={{ fontSize: 15, fontWeight: \"bold\" }}\n                >\n                  Image URL\n                </label>\n                <div class=\"col-sm-10\">\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"inputEmail\"\n                    placeholder=\"Enter Image URL\"\n                    value={imageURL}\n                    onInput={(e) => setimageURL(e.target.value)}\n                    required\n                  />\n                </div>\n              </div>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={save}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nconst receive = (state) => {\n  if (state.hasOwnProperty(\"status\")) {\n    if (state.status.update === \"success\") {\n      state.data.forEach((element, index) => {\n        if (element.p_id == state.status.record.p_id) {\n          element.p_name = state.status.record.p_name;\n          element.p_cost = state.status.record.p_cost;\n        }\n      });\n    }\n\n    if (state.status.delete === \"success\") {\n      let id = state.data.findIndex((element, index) => {\n        return element.p_id === state.status.p_id;\n      });\n      state.data.splice(id, 1);\n    }\n    if (state.status.insert === \"success\") {\n      state.data.push(state.status.record);\n      swal({\n        title: \"Insert Success\",\n        icon: \"success\",\n      });\n    }\n  }\n\n  return {\n    data: state.data,\n    status: state.status,\n  };\n};\n\nconst send = (dispatch) => {\n  return {\n    getProducts: () => {\n      dispatch(actions.getProducts());\n    },\n\n    addNewProduct: (record) => {\n      dispatch(actions.addNewProduct(record));\n    },\n  };\n};\nexport default connect(receive, send)(Products);\n"]},"metadata":{},"sourceType":"module"}